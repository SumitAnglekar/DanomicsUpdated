{"version":3,"sources":["Services/ApiService.js","Components/FileUpload.js","App.js","index.js"],"names":["data","axios","post","FileUpload","props","initialState","column","percentile","file","resetForm","setState","submitForm","event","alert","preventDefault","form","state","col","per","FormData","append","ApiService","upload","then","res","console","log","onFileChangeHandler","target","name","value","bind","Card","className","Header","Form","onReset","this","onSubmit","id","Body","Group","controlId","Label","Control","required","autoComplete","type","onChange","placeholder","File","Footer","Button","size","variant","Component","App","ReactDOM","render","document","getElementById"],"mappings":"qUASe,M,+FALJA,GACH,OAAOC,IAAMC,KAAK,gCAAiCF,O,MCoG5CG,E,kDAnGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAMVC,aAAa,CACTC,OAAO,GACPC,WAAW,GACXC,KAAM,MAVS,EAanBC,UAAU,WACN,EAAKC,UAAS,kBAAI,EAAKL,iBAdR,EAiBnBM,WAAW,SAAAC,GACPC,QACAD,EAAME,iBACN,IAAMC,EAAO,CACTP,KAAM,EAAKQ,MAAMR,MAIfS,EAAM,CAACX,OAAQ,EAAKU,MAAMV,QAC1BY,EAAM,CAACX,WAAY,EAAKS,MAAMT,YAC9BP,EAAO,IAAImB,SACjBnB,EAAKoB,OAAO,OAAQL,GACpBf,EAAKoB,OAAO,SAAUH,GACtBjB,EAAKoB,OAAO,aAAaF,GACzBG,EAAWC,OAAOtB,GACbuB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAIxB,MAChBa,MAAM,mCAlCC,EAuCnBc,oBAAoB,SAAAf,GAChB,EAAKF,SAAL,eACKE,EAAMgB,OAAOC,KAAOjB,EAAMgB,OAAOE,SAvCtC,EAAKd,MAAQ,EAAKX,aAClB,EAAKsB,oBAAsB,EAAKA,oBAAoBI,KAAzB,gBAC3B,EAAKpB,WAAa,EAAKA,WAAWoB,KAAhB,gBAJH,E,qDA+Cf,OACI,kBAACC,EAAA,EAAD,CAAMC,UAAW,yCACb,kBAACD,EAAA,EAAKE,OAAN,uBACQ,kBAACC,EAAA,EAAD,CAAMC,QAASC,KAAK5B,UAAW6B,SAAUD,KAAK1B,WAAY4B,GAAG,UACzD,kBAACP,EAAA,EAAKQ,KAAN,KACQ,kBAACL,EAAA,EAAKM,MAAN,CAAYC,UAAU,eAClB,kBAACP,EAAA,EAAKQ,MAAN,oBACA,kBAACR,EAAA,EAAKS,QAAN,CAAcC,UAAQ,EAACC,aAAa,MAChCC,KAAK,SAASlB,KAAK,SACnBC,MAAOO,KAAKrB,MAAMV,OAClB0C,SAAUX,KAAKV,oBACfM,UAAW,qBACXgB,YAAY,uBAGpB,kBAACd,EAAA,EAAKM,MAAN,CAAYC,UAAU,eAClB,kBAACP,EAAA,EAAKQ,MAAN,mBACA,kBAACR,EAAA,EAAKS,QAAN,CAAcC,UAAQ,EAACC,aAAa,MACtBC,KAAK,aAAalB,KAAK,aACvBC,MAAOO,KAAKrB,MAAMT,WAClByC,SAAUX,KAAKV,oBACrBM,UAAW,qBACXgB,YAAY,2BAGxB,kBAACd,EAAA,EAAKM,MAAN,KACI,kBAACN,EAAA,EAAKQ,MAAN,oBACA,kBAACR,EAAA,EAAKe,KAAN,CAAWL,UAAQ,EAACC,aAAa,MACrBP,GAAG,0BACDQ,KAAK,OAAOlB,KAAK,OACjBC,MAAOO,KAAKrB,MAAMR,KACrBwC,SAAUX,KAAKV,wBAMtC,kBAACK,EAAA,EAAKmB,OAAN,KACI,kBAACC,EAAA,EAAD,CAAQC,KAAK,KAAKC,QAAQ,UAAUP,KAAK,UAAzC,UAGA,kBAACK,EAAA,EAAD,CAAQC,KAAK,KAAKC,QAAQ,OAAOP,KAAK,SAAtC,gB,GA1FPQ,aCcVC,E,uKAZX,OACI,yBAAKvB,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,a,GANFsB,aCElBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a7e7c132.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nclass ApiService {\r\n\r\n    upload(data) {\r\n        return axios.post(\"http://localhost:8080/upload/\", data);\r\n    }\r\n}\r\n\r\nexport default new ApiService();","import React, { Component } from 'react';\r\nimport {Card, Form, Button} from 'react-bootstrap';\r\nimport ApiService from \"../Services/ApiService\";\r\n\r\nclass FileUpload extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.onFileChangeHandler = this.onFileChangeHandler.bind(this);\r\n        this.submitForm = this.submitForm.bind(this);\r\n    }\r\n\r\n    initialState={\r\n        column:'',\r\n        percentile:'',\r\n        file: null\r\n    }\r\n\r\n    resetForm=()=>{\r\n        this.setState(()=>this.initialState);\r\n    }\r\n\r\n    submitForm=event=>{\r\n        alert();\r\n        event.preventDefault();\r\n        const form = {\r\n            file: this.state.file\r\n        };\r\n        // column: this.state.column,\r\n        //     percentile: this.state.percentile,\r\n        const col = {column: this.state.column};\r\n        const per = {percentile: this.state.percentile};\r\n        const data = new FormData();\r\n        data.append('file', form);\r\n        data.append('column', col);\r\n        data.append('percentile',per);\r\n        ApiService.upload(data)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                alert(\"File uploaded successfully.\")\r\n            })\r\n\r\n    }\r\n\r\n    onFileChangeHandler=event=>{\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <Card className={\"border border-dark bg-dark text-white\"}>\r\n                <Card.Header>Danommics Task</Card.Header>\r\n                        <Form onReset={this.resetForm} onSubmit={this.submitForm} id=\"formId\">\r\n                            <Card.Body>\r\n                                    <Form.Group controlId=\"formGridCol\">\r\n                                        <Form.Label>Column Name</Form.Label>\r\n                                        <Form.Control required autoComplete=\"off\"\r\n                                            type=\"column\" name=\"column\"\r\n                                            value={this.state.column}\r\n                                            onChange={this.onFileChangeHandler}\r\n                                            className={\"bg-dark text-white\"}\r\n                                            placeholder=\"Enter column name\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId=\"formGridPer\">\r\n                                        <Form.Label>Percentile</Form.Label>\r\n                                        <Form.Control required autoComplete=\"off\"\r\n                                                      type=\"percentile\" name=\"percentile\"\r\n                                                      value={this.state.percentile}\r\n                                                      onChange={this.onFileChangeHandler}\r\n                                                className={\"bg-dark text-white\"}\r\n                                                placeholder=\"Enter Percentile Here\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>File Upload</Form.Label>\r\n                                        <Form.File required autoComplete=\"off\"\r\n                                                    id=\"exampleFormControlFile1\"\r\n                                                      type=\"file\" name=\"file\"\r\n                                                      value={this.state.file}\r\n                                                   onChange={this.onFileChangeHandler}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    {/*<label>Upload Your File </label>*/}\r\n                                    {/*<input type=\"file\" className=\"form-control\" name=\"file\" onChange={this.onFileChangeHandler}/>*/}\r\n                            </Card.Body>\r\n                            <Card.Footer>\r\n                                <Button size=\"sm\" variant=\"success\" type=\"submit\">\r\n                                    Submit\r\n                                </Button>\r\n                                <Button size=\"sm\" variant=\"info\" type=\"reset\">\r\n                                    Reset\r\n                                </Button>\r\n                            </Card.Footer>\r\n                        </Form>\r\n                    </Card>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileUpload;\r\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport FileUpload from \"./Components/FileUpload\";\nclass App extends Component {\nrender(){\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <FileUpload/>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}